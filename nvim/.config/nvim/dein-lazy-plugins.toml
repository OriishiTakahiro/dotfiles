# for general ------------------
[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

# for zsh ------------------
[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = 'zsh'

# for docker ------------------
[[plugins]]
repo = 'zchee/deoplete-docker'
on_ft = 'dockerfile'

# for plantuml ------------------
[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = 'uml'

# for markdown ------------------
[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = 'markdown'
[[plugins]]
repo = 'rhysd/vim-grammarous'
on_ft = 'markdown'
[[plugins]]
repo = 'kannokanno/previm'
hook_source='''
let g:previm_open_cmd = 'open -a Google\ Chrome'
'''
on_ft = 'markdown'

# for terraform ------------------
[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = 'terraform'
hook_source='''
let g:terraform_binary_path = '/opt/homebrew/bin/terraform'
let g:terraform_align = 1
let g:terraform_fold_sections = 0
let g:lsp_settings_root_markers = ['.terraform']
let g:terraform_fmt_on_save = 1

autocmd FileType terraform call terraform#fmt()
'''

# for ansible ------------------
[[plugins]]
repo = 'pearofducks/ansible-vim'
on_ft = 'yaml.ansible'
hook_source = '''
let g:ansible_unindent_after_newline = 1
let g:ansible_attribute_highlight = "ob"
'''

# for toml ------------------
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# for golang ------------------

[[plugins]]
repo = 'zchee/deoplete-go'
on_ft = 'go'
depends = ['deoplete.nvim']
build = 'make'
hook_source = '''
let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
'''

#[[plugins]]
#repo = 'sebdah/vim-delve'
#on_ft = 'go'
#hook_source = '''
#let g:delve_enable_syntax_highlighting = 0
#let g:delve_backend = "native"
#'''
#hook_source = '''
#nmap :bp :DlvToggleBreakpoint<CR> " <CR> means press Return key
#nmap :tp :DlvToggleTracepoint<CR>
#nmap :dlvdebug :DlvDebug<CR>
#nmap :dlvtest :DlvTest<CR>
#nmap :dlvclear :DlvClearAll<CR>
#'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
let g:go_fmt_command = "goimports"
let g:go_def_mapping_enabled = 0
let g:go_doc_keywordprg_enabled = 0
filetype plugin indent on
'''

[[plugins]]
repo = 'vim-jp/vim-go-extra'
on_ft = 'go'
hook_source = '''
let g:go_highlight_build_constraints = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_structs = 1
let g:go_auto_sameids = 1
'''

# for python ------------------
[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
repo = 'fisadev/vim-isort'
on_ft='python'
hook_source = '''
let g:vim_isort_map = '<C-i>'
let g:vim_isort_python_version = 'python3'
'''

# for ruby ------------------
[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = 'ruby'

# for rust ------------------
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
